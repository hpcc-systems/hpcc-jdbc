CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

FIND_PACKAGE(Java REQUIRED)
INCLUDE(UseJava)

SET (TEST_PACKAGE_LOCATION tests)
SET (TEST_PACKAGE_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/${TEST_PACKAGE_LOCATION})

SET (ANTLR_GRAMMAR_LOCATION antlr/grammar)
SET (ANTLR_GRAMMAR_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/${ANTLR_GRAMMAR_LOCATION})
SET (ANTLR_GRAMMAR_NAME ${ANTLR_GRAMMAR_SOURCE_DIR}/SQLExpression.g)

SET (ANTLR_GRAMMAR_CODE_LOCATION antlr/sqlparser)
SET (ANTLR_GRAMMAR_CODE_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/${ANTLR_GRAMMAR_CODE_LOCATION})

SET (ANTLR_GENERATED_GRAMMAR_LOCATION ${ANTLR_GRAMMAR_CODE_LOCATION}/generated)
SET (ANTLR_GENERATED_GRAMMAR_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/${ANTLR_GENERATED_GRAMMAR_LOCATION})

SET (ANTLR_COMMAND ${Java_JAVA_EXECUTABLE} "-cp" ${ANTLR_BUILDTIME_JAR} "org.antlr.Tool" ${ANTLR_GRAMMAR_NAME} "-o" ${ANTLR_GENERATED_GRAMMAR_SOURCE_DIR})
#SET (ANTLR_COMMAND_ECHO "${Java_JAVA_EXECUTABLE} -cp ${ANTLR_BUILDTIME_JAR} org.antlr.Tool ${ANTLR_GRAMMAR_NAME} -o ${ANTLR_GENERATED_GRAMMAR_SOURCE_DIR}")

#execute_process(COMMAND echo "${ANTLR_COMMAND_ECHO}" )

ADD_CUSTOM_COMMAND(
    OUTPUT ${ANTLR_GENERATED_GRAMMAR_SOURCE_DIR}/SQLExpressionLexser.java ${ANTLR_GENERATED_GRAMMAR_SOURCE_DIR}/SQLExpressionParser.java
    TARGET ${JAR_FILE}
    COMMAND ${ANTLR_COMMAND}
)

#Dynamically generate java class with build-time version information
CONFIGURE_FILE("HPCCVersionTracker.java.in" "${CMAKE_CURRENT_SOURCE_DIR}/HPCCVersionTracker.java")

#Setup the jar file name
SET (JAR_FILE "${PRODUCT_PREFIX}-${PROJECT_NAME}-${HPCC_MAJOR}.${HPCC_MINOR}.${HPCC_POINT}${HPCC_MATURITY}")

#list of java files to build
FILE( GLOB JAVA_SOURCE_FILES "${CMAKE_CURRENT_SOURCE_DIR}/*.java" "${ANTLR_GRAMMAR_CODE_SOURCE_DIR}/*.java" "${ANTLR_GENERATED_GRAMMAR_SOURCE_DIR}/*.java")

IF ( MAKE_TEST_PACKAGE )
    SET (JDBC_TEST_CLASS "org.hpccsystems.jdbcdriver.tests.HPCCDriverTest")
    CONFIGURE_FILE("/home/hpccuser/GIT/hpcc-jdbc/META_INF/MANIFEST.MF.in" "/home/hpccuser/GIT/hpcc-jdbc/META_INF/MANIFEST.MF")

    MESSAGE("INCLUDING TEST files!")
    #list of java test files to build
    FILE ( GLOB JAVA_SOURCE_TEST_FILES "${TEST_PACKAGE_SOURCE_DIR}/*.java" )
    #Append "TEST" postfix to target jar file.
    SET (JAR_FILE "${JAR_FILE}-TEST")
ENDIF()

#ANTLR dependancy:
list(APPEND CMAKE_JAVA_INCLUDE_PATH ${ANTLR_BUILDTIME_JAR})

#Compile the source files, create target jar file
ADD_JAR(${JAR_FILE} ${JAVA_SOURCE_FILES} ${JAVA_SOURCE_TEST_FILES} )

ADD_CUSTOM_COMMAND (
    TARGET ${JAR_FILE}
    COMMAND "/usr/bin/jar" uvfm ${JAR_FILE} "/home/hpccuser/GIT/hpcc-jdbc/META_INF/MANIFEST.MF"
  )

#Message( "/usr/bin/jar uvf ${JAR_FILE} ${ANTLRRUNTIMECLASSES}")
#execute_process (
#    COMMAND "/usr/bin/jar" "uvf" ${JAR_FILE}.jar ${ANTLRRUNTIMECLASSES}
#    RESULT_VARIABLE result
#    ERROR_VARIABLE error
#  )
